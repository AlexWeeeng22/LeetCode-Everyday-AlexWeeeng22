class Solution {
public:
    int numIslands(vector<vector<char>>& grid) {
        int res = 0;
        for(int i = 0; i < grid.size(); ++i){
            for(int j = 0; j < grid[0].size(); ++j){
                if(grid[i][j] == '1') {
                    res += 1;
                    bfs(grid, res, i, j);
                }
            }
        }
        return res;
    }
private:
    void bfs(vector<vector<char>>& grid, int& res, int x, int y){
        if (x < 0 || y < 0 || x >= grid.size() || y >= grid[0].size()|| grid[x][y] == '0') return;
        if (grid[x][y] == '1'){
            grid[x][y] = '0';
            bfs(grid, res, x+1, y);
            bfs(grid, res, x-1, y);
            bfs(grid, res, x, y+1);
            bfs(grid, res, x, y-1);
        } else {
            return;
        }
    }
};
